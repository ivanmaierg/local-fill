{"version":3,"file":"overlay.js","sources":["../src/overlay/OverlayApp.tsx","../src/overlay/main.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface OverlayAppProps {}\n\nexport const OverlayApp: React.FC<OverlayAppProps> = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [suggestions, setSuggestions] = useState<any[]>([]);\n  const [activeField, setActiveField] = useState<HTMLElement | null>(null);\n\n  useEffect(() => {\n    // Listen for focus events on form fields\n    const handleFieldFocus = (event: FocusEvent) => {\n      const target = event.target as HTMLElement;\n      if (isFormField(target)) {\n        setActiveField(target);\n        setIsVisible(true);\n        // TODO: Load suggestions for this field\n      }\n    };\n\n    const handleFieldBlur = () => {\n      // Delay hiding to allow for clicking on suggestions\n      setTimeout(() => {\n        setIsVisible(false);\n        setActiveField(null);\n      }, 200);\n    };\n\n    document.addEventListener('focusin', handleFieldFocus);\n    document.addEventListener('focusout', handleFieldBlur);\n\n    return () => {\n      document.removeEventListener('focusin', handleFieldFocus);\n      document.removeEventListener('focusout', handleFieldBlur);\n    };\n  }, []);\n\n  const isFormField = (element: HTMLElement): boolean => {\n    const formFieldSelectors = [\n      'input[type=\"text\"]',\n      'input[type=\"email\"]',\n      'input[type=\"tel\"]',\n      'input[type=\"url\"]',\n      'textarea',\n      'select'\n    ];\n    \n    return formFieldSelectors.some(selector => element.matches(selector));\n  };\n\n  const getFieldPosition = (field: HTMLElement) => {\n    const rect = field.getBoundingClientRect();\n    return {\n      top: rect.bottom + window.scrollY + 8,\n      left: rect.left + window.scrollX,\n      width: rect.width\n    };\n  };\n\n  if (!isVisible || !activeField) {\n    return null;\n  }\n\n  const position = getFieldPosition(activeField);\n\n  return (\n    <div\n      className=\"fixed z-50 bg-white border border-gray-200 rounded-lg shadow-lg p-2 min-w-48\"\n      style={{\n        top: position.top,\n        left: position.left,\n        width: Math.max(position.width, 192)\n      }}\n    >\n      <div className=\"text-xs text-gray-500 mb-2\">Suggestions</div>\n      \n      {suggestions.length === 0 ? (\n        <div className=\"text-sm text-gray-500 py-2\">\n          No suggestions available\n        </div>\n      ) : (\n        <div className=\"space-y-1\">\n          {suggestions.map((suggestion, index) => (\n            <button\n              key={index}\n              className=\"w-full text-left px-2 py-1 text-sm hover:bg-gray-100 rounded\"\n              onClick={() => {\n                // TODO: Apply suggestion\n                console.log('Apply suggestion:', suggestion);\n                setIsVisible(false);\n              }}\n            >\n              {suggestion.value}\n            </button>\n          ))}\n        </div>\n      )}\n      \n      <div className=\"mt-2 pt-2 border-t border-gray-200\">\n        <button\n          className=\"w-full text-left px-2 py-1 text-sm text-blue-600 hover:bg-blue-50 rounded\"\n          onClick={() => {\n            // TODO: Open snippet library\n            console.log('Open snippet library');\n          }}\n        >\n          More snippets...\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { OverlayApp } from './OverlayApp';\n\nconst container = document.getElementById('local-fill-overlay');\nif (!container) {\n  throw new Error('Overlay container not found');\n}\n\nconst root = createRoot(container);\nroot.render(<OverlayApp />);\n"],"names":["useState","useEffect","jsxs","jsx"],"mappings":";AAIO,MAAM,aAAwC,MAAM;AACzD,QAAM,CAAC,WAAW,YAAY,IAAIA,aAAAA,SAAS,KAAK;AAChD,QAAM,CAAC,aAAa,cAAc,IAAIA,aAAAA,SAAgB,CAAA,CAAE;AACxD,QAAM,CAAC,aAAa,cAAc,IAAIA,aAAAA,SAA6B,IAAI;AAEvEC,eAAAA,UAAU,MAAM;AAEd,UAAM,mBAAmB,CAAC,UAAsB;AAC9C,YAAM,SAAS,MAAM;AACrB,UAAI,YAAY,MAAM,GAAG;AACvB,uBAAe,MAAM;AACrB,qBAAa,IAAI;AAAA,MAEnB;AAAA,IACF;AAEA,UAAM,kBAAkB,MAAM;AAE5B,iBAAW,MAAM;AACf,qBAAa,KAAK;AAClB,uBAAe,IAAI;AAAA,MACrB,GAAG,GAAG;AAAA,IACR;AAEA,aAAS,iBAAiB,WAAW,gBAAgB;AACrD,aAAS,iBAAiB,YAAY,eAAe;AAErD,WAAO,MAAM;AACX,eAAS,oBAAoB,WAAW,gBAAgB;AACxD,eAAS,oBAAoB,YAAY,eAAe;AAAA,IAC1D;AAAA,EACF,GAAG,CAAA,CAAE;AAEL,QAAM,cAAc,CAAC,YAAkC;AACrD,UAAM,qBAAqB;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAGF,WAAO,mBAAmB,KAAK,CAAA,aAAY,QAAQ,QAAQ,QAAQ,CAAC;AAAA,EACtE;AAEA,QAAM,mBAAmB,CAAC,UAAuB;AAC/C,UAAM,OAAO,MAAM,sBAAA;AACnB,WAAO;AAAA,MACL,KAAK,KAAK,SAAS,OAAO,UAAU;AAAA,MACpC,MAAM,KAAK,OAAO,OAAO;AAAA,MACzB,OAAO,KAAK;AAAA,IAAA;AAAA,EAEhB;AAEA,MAAI,CAAC,aAAa,CAAC,aAAa;AAC9B,WAAO;AAAA,EACT;AAEA,QAAM,WAAW,iBAAiB,WAAW;AAE7C,SACEC,kCAAAA;AAAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAU;AAAA,MACV,OAAO;AAAA,QACL,KAAK,SAAS;AAAA,QACd,MAAM,SAAS;AAAA,QACf,OAAO,KAAK,IAAI,SAAS,OAAO,GAAG;AAAA,MAAA;AAAA,MAGrC,UAAA;AAAA,QAAAC,kCAAAA,IAAC,OAAA,EAAI,WAAU,8BAA6B,UAAA,eAAW;AAAA,QAEtD,YAAY,WAAW,IACtBA,sCAAC,OAAA,EAAI,WAAU,8BAA6B,UAAA,2BAAA,CAE5C,IAEAA,kCAAAA,IAAC,SAAI,WAAU,aACZ,sBAAY,IAAI,CAAC,YAAY,UAC5BA,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YAEC,WAAU;AAAA,YACV,SAAS,MAAM;AAEb,sBAAQ,IAAI,qBAAqB,UAAU;AAC3C,2BAAa,KAAK;AAAA,YACpB;AAAA,YAEC,UAAA,WAAW;AAAA,UAAA;AAAA,UARP;AAAA,QAAA,CAUR,GACH;AAAA,QAGFA,kCAAAA,IAAC,OAAA,EAAI,WAAU,sCACb,UAAAA,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAU;AAAA,YACV,SAAS,MAAM;AAEb,sBAAQ,IAAI,sBAAsB;AAAA,YACpC;AAAA,YACD,UAAA;AAAA,UAAA;AAAA,QAAA,EAED,CACF;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGN;AC3GA,MAAM,YAAY,SAAS,eAAe,oBAAoB;AAC9D,IAAI,CAAC,WAAW;AACd,QAAM,IAAI,MAAM,6BAA6B;AAC/C;AAEA,MAAM,OAAO,WAAW,SAAS;AACjC,KAAK,OAAOA,kCAAAA,IAAC,YAAA,CAAA,CAAW,CAAE;"}